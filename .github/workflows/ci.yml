name: CI
on:
  push:
    paths:
      - "packages/shared/**"
      - "services/service-a/**"
      - "services/service-b/**"
    branches: [main]
  pull_request:
    paths:
      - "packages/shared/**"
      - "services/service-a/**"
      - "services/service-b/**"
    branches: [main]

jobs:
  # Test and build shared package first
  build-shared:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: packages/shared/package-lock.json

      - name: Install dependencies
        run: |
          cd packages/shared
          npm ci

      - name: Lint
        run: |
          cd packages/shared
          if [ -f package.json ] && npm run | grep -q "lint"; then npm run lint; else echo "No lint script"; fi

      - name: Test
        run: |
          cd packages/shared
          if [ -f package.json ] && npm run | grep -q "test"; then npm test; else echo "No test script"; fi

      - name: Build
        run: |
          cd packages/shared
          if [ -f package.json ] && npm run | grep -q "build"; then npm run build; else echo "No build script"; fi

      # Cache the built shared package
      - name: Cache shared build
        uses: actions/cache@v3
        with:
          path: packages/shared
          key: shared-build-${{ github.sha }}

  # Test and build services after shared is built
  build-services:
    runs-on: ubuntu-latest
    needs: build-shared
    strategy:
      matrix:
        service:
          - services/service-a
          - services/service-b
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      # Restore the built shared package
      - name: Restore shared build
        uses: actions/cache@v3
        with:
          path: packages/shared
          key: shared-build-${{ github.sha }}

      - name: Install shared dependencies
        run: |
          cd packages/shared
          npm ci

      - name: Install service dependencies
        run: |
          cd ${{ matrix.service }}
          npm ci

      - name: Lint
        run: |
          cd ${{ matrix.service }}
          if [ -f package.json ] && npm run | grep -q "lint"; then npm run lint; else echo "No lint script"; fi

      - name: Test
        run: |
          cd ${{ matrix.service }}
          if [ -f package.json ] && npm run | grep -q "test"; then npm test; else echo "No test script"; fi

      - name: Build
        run: |
          cd ${{ matrix.service }}
          if [ -f package.json ] && npm run | grep -q "build"; then npm run build; else echo "No build script"; fi
